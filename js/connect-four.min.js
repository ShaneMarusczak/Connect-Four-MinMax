"use strict";(()=>{class Board{constructor(game,fieldOfPlay,player){this.game=game,this.fieldOfPlay=fieldOfPlay,this.player=player}isFinished(depth,score){return!(0!=depth&&score!=this.game.score&&score!=-this.game.score&&!this.isFull())}place(column){if(null===this.fieldOfPlay[0][column]&&column>=0&&column<this.game.columns){for(let y=this.game.rows-1;y>=0;y--)if(null===this.fieldOfPlay[y][column]){this.fieldOfPlay[y][column]=this.player;break}return this.player=Game.switchRound(this.player),!0}return!1}scoreBoard(row,column,deltaY,deltaX){let humanPoints=0,computerPoints=0,internalRow=row,internalCol=column;this.game.winningArrayHuman=[],this.game.winningArrayCpu=[];for(let i=0;i<4;i++)0==this.fieldOfPlay[internalRow][internalCol]?(this.game.winningArrayHuman.push([internalRow,internalCol]),humanPoints++):1==this.fieldOfPlay[internalRow][internalCol]&&(this.game.winningArrayCpu.push([internalRow,internalCol]),computerPoints++),internalRow+=deltaY,internalCol+=deltaX;return 4==humanPoints?(this.game.winners=this.game.winningArrayHuman,-this.game.score):4==computerPoints?(this.game.winners=this.game.winningArrayCpu,this.game.score):computerPoints}evaluateScore(){let points=0,verticalPoints=0,horizontalPoints=0,diagonalPoints1=0,diagonalPoints2=0;for(let row=0;row<this.game.rows-3;row++)for(let column=0;column<this.game.columns;column++){const score=this.scoreBoard(row,column,1,0);if(score==this.game.score)return this.game.score;if(score==-this.game.score)return-this.game.score;verticalPoints+=score}for(let row=0;row<this.game.rows;row++)for(let column=0;column<this.game.columns-3;column++){const score=this.scoreBoard(row,column,0,1);if(score==this.game.score)return this.game.score;if(score==-this.game.score)return-this.game.score;horizontalPoints+=score}for(let row=0;row<this.game.rows-3;row++)for(let column=0;column<this.game.columns-3;column++){const score=this.scoreBoard(row,column,1,1);if(score==this.game.score)return this.game.score;if(score==-this.game.score)return-this.game.score;diagonalPoints1+=score}for(let row=3;row<this.game.rows;row++)for(let column=0;column<=this.game.columns-4;column++){const score=this.scoreBoard(row,column,-1,1);if(score==this.game.score)return this.game.score;if(score==-this.game.score)return-this.game.score;diagonalPoints2+=score}return points=horizontalPoints+verticalPoints+diagonalPoints1+diagonalPoints2,points}isFull(){for(let i=0;i<this.game.columns;i++)if(null===this.fieldOfPlay[0][i])return!1;return!0}getBoardCopy(){const newBoard=[];for(let i=0;i<this.fieldOfPlay.length;i++)newBoard.push(this.fieldOfPlay[i].slice());return new Board(this.game,newBoard,this.player)}}class Game{constructor(depth){this.rows=6,this.columns=7,this.depth=depth,this.score=1e5,this.round=0,this.lastHumanMove=null,this.humanMovesTaken=0,this.winners=[],this.gameOver=!1,this.init()}init(){const gameBoard=new Array(6);for(let i=0;i<gameBoard.length;i++){gameBoard[i]=new Array(7);for(let j=0;j<gameBoard[i].length;j++)gameBoard[i][j]=null}this.board=new Board(this,gameBoard,0),Array.from(document.getElementById("gameBoard").getElementsByTagName("td")).forEach(td=>{td.addEventListener("click",e=>{this.move(e)},!1),td.addEventListener("mouseover",hoverOverCollumnHighLight),td.addEventListener("mouseleave",hoverOverCollumnHighLightReset)})}move(e){if(!this.gameOver){document.getElementById("uiBlocker").style.display="block";const element=e.target||window.event.srcElement;0==this.round&&this.place(element.cellIndex),this.humanMove=element.cellIndex,this.humanMovesTaken++,window.sleep(800).then(()=>{1==this.round&&this.generateComputerDecision()})}}static animateDrop({inputRow:inputRow,inputCol:inputCol,moveTurn:moveTurn,currentRow:currentRow=0}={}){if(currentRow===inputRow)return this.gameOver||moveTurn||window.sleep(75).then(()=>{window.modalOpen("Thinking...")}),!this.gameOver&&moveTurn&&(document.getElementById("uiBlocker").style.display="none"),void(document.getElementById("td"+currentRow+inputCol).className=moveTurn?"coin cpu-coin":"coin human-coin");document.getElementById("td"+currentRow+inputCol).classList.add("coin"),document.getElementById("td"+currentRow+inputCol).classList.add(moveTurn?"cpu-coin":"human-coin"),window.sleep(100).then(()=>{document.getElementById("td"+currentRow+inputCol).classList.remove("coin"),document.getElementById("td"+currentRow+inputCol).classList.remove(moveTurn?"cpu-coin":"human-coin")}),window.sleep(100).then(()=>{Game.animateDrop({currentRow:currentRow+1,inputCol:inputCol,inputRow:inputRow,moveTurn:moveTurn})})}place(column){if(!this.gameOver){for(let y=this.rows-1;y>=0;y--){const td=document.getElementById("gameBoard").rows[y].cells[column];if(td.classList.contains("empty")){1==this.round?Game.animateDrop({inputCol:column,inputRow:y,moveTurn:!0}):Game.animateDrop({inputCol:column,inputRow:y,moveTurn:!1});break}}if(!this.board.place(column))return document.getElementById("uiBlocker").style.display="none",alert("Invalid move!");this.round=Game.switchRound(this.round),this.checkGameOver()}return null}generateComputerDecision(){if(!this.gameOver){this.leaves=0;const[aiMove]=this.maximize(this.board,this.depth);window.sleep(14/Number(this.depth)*325).then(()=>{window.modalClose(),window.sleep(100).then(()=>this.place(aiMove))})}}maximize(board,depth,alpha,beta){const score=board.evaluateScore();if(board.isFinished(depth,score))return[null,score];const max=[null,-99999];for(let column=0;column<this.columns;column++){const newBoard=board.getBoardCopy();if(newBoard.place(column)){const nextMove=this.minimize(newBoard,depth-1,alpha,beta);if((null===max[0]||nextMove[1]>max[1])&&(max[0]=column,[,max[1]]=nextMove,[,alpha]=nextMove),alpha>=beta)return max}}return max}minimize(board,depth,alpha,beta){const score=board.evaluateScore();if(board.isFinished(depth,score))return[null,score];const min=[null,99999];for(let column=0;column<this.columns;column++){const newBoard=board.getBoardCopy();if(newBoard.place(column)){const nextMove=this.maximize(newBoard,depth-1,alpha,beta);if((null===min[0]||nextMove[1]<min[1])&&(min[0]=column,[,min[1]]=nextMove,[,beta]=nextMove),alpha>=beta)return min}}return min}static switchRound(round){return 0==round?1:0}checkGameOver(){const thisScore=this.board.evaluateScore();thisScore==-this.score?(this.gameOver=!0,window.modal("You Win!",2e3),document.getElementById("uiBlocker").style.display="none",window.sleep(1e3).then(()=>this.winnersColorChange())):thisScore==this.score?(this.gameOver=!0,window.modal("You Lose!",2e3),document.getElementById("uiBlocker").style.display="none",window.sleep(1e3).then(()=>this.winnersColorChange())):this.board.isFull()&&(this.gameOver=!0,document.getElementById("uiBlocker").style.display="none",window.modal("Draw!",2e3))}winnersColorChange(){document.getElementById("gameBoard").className="finished";for(let i=0;i<this.winners.length;i++){const name=document.getElementById("gameBoard").rows[this.winners[i][0]].cells[this.winners[i][1]].className;document.getElementById("gameBoard").rows[this.winners[i][0]].cells[this.winners[i][1]].className=name+" win"}}}function hoverOverCollumnHighLight(e){if(!this.gameOver){const col=Number(e.target.id.substring(3));document.getElementById("fc"+col).classList.add("bounce");for(let y=5;y>=0;y--)if(document.getElementById("td"+y+col).classList.contains("empty")){document.getElementById("td"+y+col).classList.add("glow");break}}}function hoverOverCollumnHighLightReset(e){const col=Number(e.target.id.substring(3));document.getElementById("fc"+col).classList.remove("bounce");for(let y=5;y>=0;y--)if(document.getElementById("td"+y+col).classList.contains("empty")){document.getElementById("td"+y+col).classList.remove("glow");break}}const start=()=>{document.getElementById("difficulty").disabled=!0,window.Game=new Game(Array.from(document.getElementById("difficulty").options).find(d=>d.selected).value)};(()=>{document.getElementById("start").addEventListener("click",start);for(let i=0;i<7;i++){const circle=document.createElement("div");circle.id="fc"+i,circle.classList.add("floatingCircle"),document.getElementById("floatingCircles").appendChild(circle)}for(let i=0;i<6;i++){const tableRow=document.createElement("tr");document.getElementById("gameBoard").appendChild(tableRow);for(let j=0;j<7;j++){const tableData=document.createElement("td");tableData.className="empty",tableData.id="td"+i+j,tableRow.appendChild(tableData)}}})()})();